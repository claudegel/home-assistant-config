sensor:
  
  - platform: version
    name: HA Installed Version
    scan_interval: 86400
  
  - platform: command_line
    name: HA Available Version
    scan_interval: 720
    command: >-
      python3 -c
      "import requests
      ;u = 'https://pypi.python.org/pypi/homeassistant/json'
      ;print(requests.get(u).json()['info']['version'])
      "
  
  - platform: command_line
    name: "HA Uptime"
    command: >-
      echo "$((
      $(date +%s) - 
      $(date -d "$(head -n1 /mnt/storage/domotic/homeassistant/home-assistant.log | 
      cut -d' ' -f-2)" +%s)
      ))"
    scan_interval: 720
    value_template: >-
      {% set uptime = value | int %}
      {% set seconds = uptime % 60 %}
      {% set minutes = ((uptime % 3600) / 60) | int %}
      {% set hours = ((uptime % 86400) / 3600) | int %}
      {% set days = (uptime / 86400) | int %}
      {%- if days > 0 -%}
        {%- if days == 1 -%}
          1 day
        {%- else -%}
          {{ days }} days
        {%- endif -%}
        {{ ', ' }}
      {%- endif -%}
      {%- if hours > 0 -%}
        {%- if hours == 1 -%}
          1 hour
        {%- else -%}
          {{ hours }} hours
        {%- endif -%}
        {{ ', ' }}
      {%- endif -%}
      {%- if minutes > 0 -%}
        {%- if minutes == 1 -%}
          1 minute
        {%- else -%}
          {{ minutes }} minutes
        {%- endif -%}
      {%- endif -%}

  - platform: filesize
    entity_namespace: hass_
    file_paths:
      - /mnt/storage/domotic/homeassistant/recorder.sqlite
      - /mnt/storage/domotic/homeassistant/home-assistant.log  

  - platform: template
    sensors:
      thermostat_transmitter_battery_level:
        friendly_name: 'Thermostat Transmitter Battery'
        value_template: '{{ states.zwave.thermostat_transmitter.attributes.get("battery_level", 100) }}'
        unit_of_measurement: '%'
        icon_template: >
          {%- if states.zwave.thermostat_transmitter.attributes.get("battery_level", 100) | int < 30 -%}
            mdi:battery-alert
          {%- elif states.zwave.thermostat_transmitter.attributes.get("battery_level", 100) | int < 50 -%}
            mdi:battery-40
          {%- else -%}
            mdi:battery
          {%- endif %}


homeassistant:
  customize:
    group.all_automations:
      hidden: false
    sensor.ha_installed_version:
      friendly_name: "Installed version"
    sensor.ha_available_version:
      friendly_name: "Available version"
    sensor.ha_uptime:
      friendly_name: "Domot Server Uptime"
    sensor.hass__homeassistantlog:
      friendly_name: "Log size"
    sensor.hass__recordersqlite:
      friendly_name: "DB size"


automation:
  - alias: SRT321 Battery Notifications
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.thermostat_battery_level
        value_template: "{{ state.attributes }}"
        below: '40'
    action:
      - service: notify.pushover
        data:
          message: 'Battery of SRT321 thermostat is low!'
      - service: persistent_notification.create
        data_template:
          title: SRT321 Low Battery
          message: >
            SRT321 has low level:
            {{ states.sensor.thermostat_battery_level }} %
          notification_id: srt321-low-battery-alert


group:
  ha_system:
    name: Home Assistant System
    entities:
      - sensor.ha_installed_version
      - sensor.ha_available_version
      - sensor.ha_uptime
      - sensor.hass__homeassistantlog
      - sensor.hass__recordersqlite


  battery_levels:
    name: Battery Levels
    entities:
      - sensor.thermostat_transmitter_battery_level

  zwave_devices:
    name: Z-Wave devices
    entities:
      - zwave.controller
      - zwave.cabinet_smart_plug
      - zwave.dark_blue_smart_plug
      - zwave.entrance_multisensor
      - zwave.home_cinema_smart_plug
      - zwave.boiler_actuator
      - zwave.thermostat_transmitter
      - zwave.washing_machine_wall_plug
      
      
  
