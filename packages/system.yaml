sensor:
  
  - platform: version
    name: HA Installed Version
    scan_interval: 86400
  
  - platform: command_line
    name: HA Available Version
    scan_interval: 720
    command: >-
      python3 -c
      "import requests
      ;u = 'https://pypi.python.org/pypi/homeassistant/json'
      ;print(requests.get(u).json()['info']['version'])
      "
  
  - platform: command_line
    name: "HA Uptime"
    command: >-
      echo "$((
      $(date +%s) - 
      $(date -d "$(head -n1 /home/pi/homeassistant/home-assistant.log | 
      cut -d' ' -f-2)" +%s)
      ))"
    scan_interval: 720
    value_template: >-
      {% set uptime = value | int %}
      {% set seconds = uptime % 60 %}
      {% set minutes = ((uptime % 3600) / 60) | int %}
      {% set hours = ((uptime % 86400) / 3600) | int %}
      {% set days = (uptime / 86400) | int %}
      {%- if days > 0 -%}
        {%- if days == 1 -%}
          1 day
        {%- else -%}
          {{ days }} days
        {%- endif -%}
        {{ ', ' }}
      {%- endif -%}
      {%- if hours > 0 -%}
        {%- if hours == 1 -%}
          1 hour
        {%- else -%}
          {{ hours }} hours
        {%- endif -%}
        {{ ', ' }}
      {%- endif -%}
      {%- if minutes > 0 -%}
        {%- if minutes == 1 -%}
          1 minute
        {%- else -%}
          {{ minutes }} minutes
        {%- endif -%}
      {%- endif -%}

  - platform: filesize
    entity_namespace: hass
    file_paths:
     - recorder.sqlite
     - home-assistant.log

  - platform: template
    sensors:
      thermostat_transmitter_battery_level:
        friendly_name: 'Thermostat Transmitter Battery'
        value_template: '{{ states.zwave.thermostat_transmitter.attributes.get("battery_level", 100) }}'
        unit_of_measurement: '%'
        icon_template: >
          {%- if states.zwave.thermostat_transmitter.attributes.get("battery_level", 100) | int < 30 -%}
            mdi:battery-alert
          {%- elif states.zwave.thermostat_transmitter.attributes.get("battery_level", 100) | int < 50 -%}
            mdi:battery-40
          {%- else -%}
            mdi:battery
          {%- endif %}

switch:
  - platform: command_line
    switches:
      aeotec_zstick_disco_light:
        friendly_name: 'Aeotec Z-Stick Disco Light'
        command_on: 'echo -e -n "\x01\x08\x00\xF2\x51\x01\x01\x05\x01\x50" > /dev/serial/by-id/usb-0658_0200-if00'
        command_off: 'echo -e -n "\x01\x08\x00\xF2\x51\x01\x00\x05\x01\x51" > /dev/serial/by-id/usb-0658_0200-if00'

shell_command:
  upgrade_hass: /home/pi/homeassistant/update.sh
  quick_restart: /home/pi/homeassistant/restart-daemon.sh
  halt_system: /home/pi/homeassistant/halt-system.sh


script:
  # Inspirated by:
  #  https://github.com/mf-social/Home-Assistant/blob/master/packages/system/maintenance.yaml
  upgrade_hass:
    alias: 'Upgrade Home Assistant'
    sequence:
      - delay: 00:00:02
      - service: notify.pushover
        data:
          message: 'Upgrading Home Assistant'
          title: 'Home Assistant is about to be upgraded to the latest version'
      - delay: 00:00:05
      - service: shell_command.upgrade_hass

  quick_restart:
    alias: 'Restart Homeassistant'
    sequence:
      - delay: 00:00:02
      - service: notify.pushover
        data:
          message: 'Restarting Home Assistant'
          title: 'Home Assistant is about to be restarted'
      - delay: 00:00:05
      - service: shell_command.quick_restart
      
  halt_system:
    alias: 'Halt System'
    sequence:
      - delay: 00:00:02
      - service: notify.pushover
        data:
          message: 'Halting Home Assistant'
          title: 'Home Assistant is about to be powered off'
      - delay: 00:00:05
      - service: shell_command.halt_system


automation:
  - alias: SRT321 Battery Notifications
    initial_state: 'on'
    trigger:
      - platform: numeric_state
        entity_id: sensor.thermostat_transmitter_battery_level
        below: '40'
    action:
      - service: notify.pushover
        data:
          message: >
            Battery of SRT321 thermostat is low:
            {{ states('sensor.thermostat_transmitter_battery_level') }} %
      - service: persistent_notification.create
        data_template:
          title: SRT321 Low Battery
          message: >
            SRT321 has low level:
            {{ states("sensor.thermostat_transmitter_battery_level") }} %
          notification_id: srt321-low-battery-alert

  - alias: "Startup Notification"
    initial_state: 'on'
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: notify.pushover
        data:
          title: "Home Assistant started"
          message: "Home Assistant has been restarted and is now ready."


homeassistant:
  customize:
    group.all_automations:
      hidden: false
    sensor.ha_installed_version:
      friendly_name: "Installed version"
    sensor.ha_available_version:
      friendly_name: "Available version"
    sensor.ha_uptime:
      friendly_name: "Domot Server Uptime"
    sensor.hass_homeassistantlog:
      friendly_name: "Log size"
    sensor.hass_recordersqlite:
      friendly_name: "DB size"
    script.upgrade_hass:
      icon: mdi:cloud-check
      can_cancel: true
      custom_text: "Upgrade Home Assistant"
    script.quick_restart:
      icon: mdi:server-network
      can_cancel: true
      custom_text: "Restart Home Assistant"
    script.halt_system:
      icon: mdi:power-off
      can_cancel: true
      custom_text: "Halt System"


group:
  ha_system:
    name: Home Assistant System
    control: hidden
    entities:
      - sensor.ha_installed_version
      - sensor.ha_available_version
      - sensor.ha_uptime
      - sensor.hass_homeassistantlog
      - sensor.hass_recordersqlite
      - script.upgrade_hass
      - script.quick_restart

  battery_levels:
    name: ZWave Battery Levels
    control: hidden
    entities:
      - sensor.thermostat_transmitter_battery_level

  zwave_devices:
    name: Z-Wave devices
    control: hidden
    entities:
      - zwave.controller
      - zwave.cabinet_smart_plug
      - zwave.dark_blue_smart_plug
      - zwave.entrance_multisensor
      - zwave.home_cinema_smart_plug
      - zwave.boiler_actuator_receiver
      - zwave.thermostat_transmitter
      - zwave.washing_machine_smart_plug
      
  debug_ha:
    name: Debug Home Assistant
    control: hidden
    entities:
      - input_boolean.dbg_washing_machine
      - switch.aeotec_zstick_disco_light
